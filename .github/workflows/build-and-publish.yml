name: build
on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  # Builds, tests, and releases (if a release) the
  build_test_release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: test
        run: ./gradlew check

      - name: upload codecov
        uses: codecov/codecov-action@v1.4.1

      - name: get version and set version env var
        run: |
          echo "PROJECT_VERSION=$(./gradlew properties -q | awk '/^version: / {print $2}')" >> $GITHUB_ENV

      # Only runs if this is a tag and if this is a release
      - name: ensure release tag matches version
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          ref: ${{ github.ref }}
        run: |
          test $PROJECT_VERSION = $(echo $ref | awk '{n=split($1, A, "/"); gsub(/v/, "", A[n]); print A[n]}')
#          test $PROJECT_VERSION = $(echo $ref | awk '{n=split($1,A,"/"); split(A[n],B,"-"); gsub(/v/,"", B[1]); print B[1]}')

# creating releases manually for now
#      - name: release
#        if: github.event_name == 'release' && github.event.action == 'published'
##        if: contains(github.ref, '/tags/') && contains(github.ref, '-release')
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ env.PROJECT_VERSION }}-release
#          release_name: ${{ env.PROJECT_VERSION }}
#          draft: false
#          prerelease: false

      - name: publish to sonatype
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.sonatypeUsername }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.sonatypePassword }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.io_github_bhowell2_signingKey }}
          ORG_GRADLE_PROJECT_signingKeyPassword: ${{ secrets.io_github_bhowell2_signingKeyPassword }}
        run: ./gradlew publish

